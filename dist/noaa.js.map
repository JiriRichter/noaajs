{"version":3,"file":"noaa.js","sources":["../src/utils/time.ts","../src/utils/xy.ts","../src/utils/codes.ts","../node_modules/tslib/tslib.es6.js","../src/weather/response/api-error.ts","../src/weather/endpoints/endpoint.ts","../src/utils/latlon.ts","../src/weather/response/geometry.ts","../src/weather/response/feature.ts","../src/weather/response/utils.ts","../src/weather/response/product.ts","../src/weather/endpoints/utils.ts","../src/weather/endpoints/parameters.ts","../src/weather/endpoints/products.ts","../src/weather/response/feature-collection.ts","../src/utils/value-units.ts","../src/weather/response/observation.ts","../src/weather/endpoints/stations.ts","../src/weather/response/station.ts","../src/weather/response/zone-forecast-period.ts","../src/weather/response/zone-forecast.ts","../src/weather/endpoints/zones.ts","../src/weather/response/zone.ts","../src/weather/response/office.ts","../src/weather/response/relative-location.ts","../src/weather/response/valid-time-period.ts","../src/weather/response/gridpoint.ts","../src/weather/response/forecast-period.ts","../src/weather/response/forecast.ts","../src/weather/endpoints/gridpoints.ts","../src/weather/response/alert.ts","../src/weather/response/alert-collection.ts","../src/weather/endpoints/alerts.ts","../src/weather/response/point.ts","../src/weather/endpoints/points.ts","../src/weather/endpoints/glossary.ts","../src/weather/endpoints/icons.ts","../src/weather/endpoints/offices.ts","../src/weather/index.ts","../src/tidesandcurrents/data/const.ts","../src/tidesandcurrents/utils.ts","../src/tidesandcurrents/data/api.ts","../src/tidesandcurrents/data/products/datums.ts","../src/tidesandcurrents/data/products/predictions.ts","../src/tidesandcurrents/data/products/wind.ts","../src/tidesandcurrents/metadata/api.ts","../src/tidesandcurrents/metadata/station-type.ts","../src/tidesandcurrents/index.ts"],"sourcesContent":["export class Time {\r\n\r\n    public milliseconds: number;\r\n\r\n    constructor(t: any) {\r\n        if (t instanceof Date) {\r\n            this.milliseconds = t.getTime();\r\n        }\r\n        else if (typeof t === 'string') {\r\n            this.milliseconds = Date.parse(t);\r\n        }\r\n        else if (typeof t === 'number') {\r\n            this.milliseconds = t;\r\n        }\r\n        else {\r\n            throw new Error('Invalid time argument (' + t + ')');\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return this.toDate().toISOString();\r\n    }\r\n\r\n    toDate() {\r\n        return new Date(this.milliseconds);\r\n    }\r\n}\r\n\r\nexport function toTime(a) {\r\n    if (a === undefined || a === null) {\r\n        return a;\r\n    }\r\n    return new Time(a);\r\n}","/* @class XY\r\n * @aka NOAA.XY\r\n *\r\n * Represents a grid point with a certain X and Y.\r\n *\r\n * @example\r\n *\r\n * ```\r\n * let xy = NOAA.xy(1,3);\r\n * ```\r\n */\r\nexport class XY {\r\n\r\n    public x;\r\n    public y;\r\n\r\n    constructor(x, y) {\r\n        x = parseInt(x);\r\n        y = parseInt(y);\r\n\r\n        if (isNaN(x) || isNaN(y)) {\r\n            throw new Error('Invalid x, y values: (' + x + ', ' + y + ')');\r\n        }\r\n        // @property x: Number\r\n        // x grid coordinate\r\n        this.x= +x;\r\n\r\n        // @property y: Number\r\n        // y grid coordinate\r\n        this.y = +y;\r\n    }\r\n\r\n    toString() {\r\n        return `${this.x},${this.y}`;\r\n    }\r\n}\r\n\r\n// @factory NOAA.xy(x: Number, y: Number): XY\r\n// Creates an object representing a grid point with the given x and y coordinates.\r\n\r\n// @alternative\r\n// @factory NOAA.xy(coords: Array): XY\r\n// Expects an array of the form `[Number, Number]` instead.\r\n\r\n// @alternative\r\n// @factory NOAA.latLon(coords: Object): XY\r\n// Expects an plain object of the form `{x: Number, y: Number}` instead.\r\nexport function toXY(a, b?) {\r\n    if (a instanceof XY) {\r\n        return a;\r\n    }\r\n    if (Array.isArray(a) && typeof a[0] !== 'object') {\r\n        if (a.length === 2) {\r\n            return new XY(a[0], a[1]);\r\n        }\r\n        return null;\r\n    }\r\n    if (a === undefined || a === null) {\r\n        return a;\r\n    }\r\n    if (typeof a === 'object' && 'x' in a) {\r\n        return new XY(a.x, a.y);\r\n    }\r\n    if (b === undefined) {\r\n        return null;\r\n    }\r\n    return new XY(a, b);\r\n}\r\n","/* \r\n * State / marine area code\r\n * */\r\nexport const StateAreaCodes = {\r\n    'AL': 'AL',\r\n    'AK': 'AK',\r\n    'AS': 'AS',\r\n    'AR': 'AR',\r\n    'AZ': 'AZ',\r\n    'CA': 'CA',\r\n    'CO': 'CO',\r\n    'CT': 'CT',\r\n    'DE': 'DE',\r\n    'DC': 'DC',\r\n    'FL': 'FL',\r\n    'GA': 'GA',\r\n    'GU': 'GU',\r\n    'HI': 'HI',\r\n    'ID': 'ID',\r\n    'IL': 'IL',\r\n    'IN': 'IN',\r\n    'IA': 'IA',\r\n    'KS': 'KS',\r\n    'KY': 'KY',\r\n    'LA': 'LA',\r\n    'ME': 'ME',\r\n    'MD': 'MD',\r\n    'MA': 'MA',\r\n    'MI': 'MI',\r\n    'MN': 'MN',\r\n    'MS': 'MS',\r\n    'MO': 'MO',\r\n    'MT': 'MT',\r\n    'NE': 'NE',\r\n    'NV': 'NV',\r\n    'NH': 'NH',\r\n    'NJ': 'NJ',\r\n    'NM': 'NM',\r\n    'NY': 'NY',\r\n    'NC': 'NC',\r\n    'ND': 'ND',\r\n    'OH': 'OH',\r\n    'OK': 'OK',\r\n    'OR': 'OR',\r\n    'PA': 'PA',\r\n    'PR': 'PR',\r\n    'RI': 'RI',\r\n    'SC': 'SC',\r\n    'SD': 'SD',\r\n    'TN': 'TN',\r\n    'TX': 'TX',\r\n    'UT': 'UT',\r\n    'VT': 'VT',\r\n    'VI': 'VI',\r\n    'VA': 'VA',\r\n    'WA': 'WA',\r\n    'WV': 'WV',\r\n    'WI': 'WI',\r\n    'WY': 'WY'\r\n};\r\n\r\nexport const MarineAreaCodes = {\r\n    'PZ': 'PZ',\r\n    'PK': 'PK',\r\n    'PH': 'PH',\r\n    'PS': 'PS',\r\n    'PM': 'PM',\r\n    'AN': 'AN',\r\n    'AM': 'AM',\r\n    'GM': 'GM',\r\n    'LS': 'LS',\r\n    'LM': 'LM',\r\n    'LH': 'LH',\r\n    'LC': 'LC',\r\n    'LE': 'LE',\r\n    'LO': 'LO'\r\n};\r\n\r\nexport const RegionCodes = {\r\n    'AL': 'AL',\r\n    'AT': 'AT',\r\n    'GL': 'GL',\r\n    'GM': 'GM',\r\n    'PA': 'PA',\r\n    'PI': 'PI'\r\n};\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","/* @class Error\r\n * @aka NOAA.Error\r\n *\r\n * Represents a API error response.\r\n * */\r\nclass ApiError {\r\n    \r\n    public correlationId: any;\r\n    public detail: any;\r\n    public instance: any;\r\n    public path: any;\r\n    public status: any;\r\n    public title: any;\r\n    public type: any;\r\n\r\n    constructor(data: object) {\r\n        /*\r\n        correlationId: \"f8f32885-c8f4-48e6-82be-ef6975c63884\"\r\n        detail: \"'/points/12' is not a valid resource path\"\r\n        instance: \"https://api.weather.gov/requests/f8f32885-c8f4-48e6-82be-ef6975c63884\"\r\n        path: \"/points/12\"\r\n        status: 404\r\n        title: \"Not Found\"\r\n        type: \"https://api.weather.gov/problems/NotFound\"\r\n        */\r\n\r\n        this.correlationId = data['correlationId'];\r\n        this.detail = data['detail'];\r\n        this.instance = data['instance'];\r\n        this.path = data['path'];\r\n        this.status = data['status'];\r\n        this.title = data['title'];\r\n        this.type = data['type'];\r\n    }\r\n}\r\n\r\nexport { ApiError };","import { ApiError } from '../response/api-error';\r\n\r\nclass Endpoint {\r\n\r\n    /** The API end point */\r\n    static url = 'https://api.weather.gov';\r\n\r\n    public path: string;\r\n\r\n    constructor(path) {\r\n        this.path = path;\r\n    }\r\n\r\n    async get(url?: string | Object, queryParameters?: object): Promise<any> {\r\n\r\n        if (typeof url === \"object\") {\r\n            url = this.constructUrl(url, queryParameters);\r\n        }\r\n\r\n        const response = await fetch(url as string, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/geo+json'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            return new ApiError(await response.json());\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    constructUrl(urlParameters, queryParameters) {\r\n        let url = Endpoint.url;\r\n        if (this.path[0] !== '/') {\r\n            url += '/';\r\n        }\r\n        url += this.path;\r\n        if (urlParameters && Array.isArray(urlParameters)) {\r\n            let first = (url.slice(-1) === '/');\r\n            urlParameters.forEach(function (value) {\r\n                url += (first ? '': '/') + encodeURIComponent(value.toString());\r\n                first = false;\r\n            });\r\n        }\r\n        if (queryParameters && queryParameters instanceof Object) {\r\n            let first = true;\r\n            url += '?';\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                url += (first ? '' : '&') + key + '=' + encodeURIComponent(queryParameters[key]);\r\n                first = false;\r\n            });\r\n        }\r\n        return url;\r\n    }\r\n}\r\n\r\nexport { Endpoint };","type LatLon = {\r\n    lat: number,\r\n    lon: number\r\n}\r\n\r\nexport function toLatLon(lat: number, lon: number) : LatLon {\r\n    return { lat: lat, lon: lon}\r\n}","import { toLatLon } from \"../../utils/latlon\";\r\n\r\nexport class Geometry {\r\n    type: any;\r\n    rings: any[];\r\n    polygons: any[];\r\n    latlon: { lat: number; lon: number; };\r\n\r\n    constructor(data) {\r\n\r\n        this.type = data['type'];\r\n\r\n        switch (data['type']) {\r\n            case 'Point':\r\n                this.latlon = toLatLon(data['coordinates'][1], data['coordinates'][0] );\r\n                break;\r\n            case 'Polygon':\r\n                this.rings = this.getPolygonRings(data['coordinates']);\r\n                break;\r\n            case 'MultiPolygon':\r\n                this.polygons = [];\r\n                for (let i = 0; i < data['coordinates'].length; i++) {\r\n                    this.polygons.push(this.getPolygonRings(data['coordinates'][i]));\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error('Invalid geometry - (' + data['type'] + ') is not valid geometry');\r\n        }\r\n    }\r\n\r\n    getPolygonRings(coordinates) {\r\n        let rings: any[] = [];\r\n        for (let i = 0; i < coordinates.length; i++) {\r\n            rings.push(this.convertCoordinates(coordinates[i]));\r\n        }\r\n        return rings;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {[]} latlons\r\n     */\r\n    convertCoordinates(coordinates) {\r\n        let result: any[] = [], i: number;\r\n\r\n        for (i = 0; i < coordinates.length; i++) {\r\n            result.push(toLatLon(coordinates[i][1], coordinates[i][0]));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function toGeometry(data) {\r\n    return new Geometry(data);\r\n}","import { Geometry, toGeometry } from './geometry';\r\n\r\n/* @class Feature\r\n * @aka NOAA.Feature\r\n *\r\n * Represents base class for API GeoJSON responses.\r\n * */\r\nexport class Feature {\r\n    geometries: Geometry[];\r\n    geometry: Geometry;\r\n\r\n    constructor(data: any) {\r\n        if (data === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (data['type'] === undefined || data['type'] !== 'Feature') {\r\n            throw new Error('Invalid data - Type property is missing or not \"Feature\"');\r\n        }\r\n\r\n        if (data['geometry'] && data['geometry']['type']) {\r\n            if (data['geometry']['type'] === 'GeometryCollection') {\r\n                this.geometries = [];\r\n                for (let i = 0; i < data['geometry']['geometries'].length; i++) {\r\n                    this.geometries.push(toGeometry(data['geometry']['geometries'][i]));\r\n                }\r\n            }\r\n            else {\r\n                this.geometry = toGeometry(data['geometry']);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Invalid geometry data');\r\n        }\r\n    }\r\n}","/**\r\n * Exctrats URL component\r\n * @param {String} url\r\n * @param {number} index\r\n */\r\nexport function getUrlPart(url, index) {\r\n    if (!url) {\r\n        return null;\r\n    }\r\n    let parts = url.split('/');\r\n    if (index < 0) {\r\n        return parts[parts.length + index];\r\n    }\r\n    return parts[index];\r\n}\r\n\r\n\r\n/**\r\n * Gets value from dictionary object\r\n * @param {string} key\r\n * @param {object} data\r\n * @param {boolean?} optional\r\n */\r\nexport function getValue(key, data, optional = false) {\r\n    if (!optional && !(key in data)) {\r\n        throw new Error('Invalid property name: ' + key);\r\n    }\r\n    return data[key];\r\n}\r\n\r\n/**\r\n * Gets feature property\r\n * @param {string} key\r\n * @param {object} data\r\n * @param {boolean?} optional\r\n */\r\nexport function getFeatureProperty(key, data, optional = false) {\r\n    return getValue(key, data['properties'], optional);\r\n}\r\n","import { toTime } from '../../utils/time';\r\nimport { toProducts } from '../endpoints/products';\r\nimport { getValue } from './utils';\r\n\r\n/* @class Product\r\n * @aka NOAA.Product\r\n *\r\n * */\r\nexport class Product {\r\n    id: any;\r\n    wmoCollectiveId: any;\r\n    issuingOffice: any;\r\n    issuanceTime: any;\r\n    productCode: any;\r\n    productName: any;\r\n    productText: any;\r\n    \r\n    constructor(data) {\r\n        this.id = getValue('id', data);\r\n        this.wmoCollectiveId = getValue('wmoCollectiveId', data);\r\n        this.issuingOffice = getValue('issuingOffice', data);\r\n        this.issuanceTime = toTime(getValue('issuanceTime', data));\r\n        this.productCode = getValue('productCode', data);\r\n        this.productName = getValue('productName', data);\r\n        this.productText = getValue('productText', data, true);\r\n    }\r\n\r\n    getProductText() {\r\n        return toProducts().getProduct(this.id);\r\n    }\r\n}\r\n","// returns date formatted as YYYYMMDD HH:mm in UTC\r\nexport function formatDate(date) {\r\n\r\n    const year = date.getUTCFullYear();\r\n    const month = date.getUTCMonth() + 1;\r\n    const day = date.getUTCDate();\r\n\r\n    const hours = date.getUTCHours();\r\n    const minutes = date.getUTCMinutes();\r\n\r\n    return `${year}${month.toString().padStart(2, \"0\")}${day.toString().padStart(2, \"0\")} ${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\r\n}","import { formatDate } from './utils'\r\n\r\n/**\r\n * Validates API parameter\r\n * @param {string} name\r\n * @param {any} value\r\n * @param {object} validateOptions\r\n */\r\nexport function validateParameter(name, value, validateOptions) {\r\n    if (Array.isArray(value)) {\r\n        if (!validateOptions['allowArray']) {\r\n            throw new Error(name + ' parameter does not allow array of values');\r\n        }\r\n        for (let i = 0; i < value.length; i++) {\r\n            validateParameter(name, value[i], validateOptions);\r\n        }\r\n    }\r\n    else {\r\n        if (validateOptions['type']) {\r\n            if (validateOptions['type'] === 'Date') {\r\n                if (!(value instanceof Date)) {\r\n                    throw new Error('Invalid ' + name + ' parameter type. Expected ' + validateOptions['type'] + ', value: ' + value);\r\n                }\r\n            }\r\n            else if (validateOptions['type'] === 'LatLon') {\r\n                if (!('lat' in value && 'lon' in value)) {\r\n                    throw new Error('Invalid ' + name + ' parameter type. Expected ' + validateOptions['type'] + ', value: ' + value);\r\n                }\r\n            }\r\n            else if (typeof value !== validateOptions['type']) {\r\n                throw new Error('Invalid ' + name + ' parameter type. Expected ' + validateOptions['type'] + ', value: ' + value);\r\n            }\r\n        }\r\n        if (validateOptions['allowedValues'] !== undefined && !(value in validateOptions['allowedValues'])) {\r\n            throw new Error('Invalid ' + name + ' parameter value does not match any allowed value; value: ' + value);\r\n        }\r\n    }\r\n}\r\n\r\nexport function toQueryParamValue(value) {\r\n    if (value instanceof Date) {\r\n        return formatDate(value);\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n        return value.join(',');\r\n    }\r\n    else {\r\n        return value.toString();\r\n    }\r\n}\r\n\r\nexport function toQueryParameters(params, parameterOptions) {\r\n    let queryParams = {},\r\n        exclusiveParam;\r\n\r\n    Object.keys(params).forEach(function (key) {\r\n        if (!(key in parameterOptions)) {\r\n            throw new Error('Invalid parameter (' + key + ')');\r\n        }\r\n\r\n        if (parameterOptions[key]['exclusive']) {\r\n            if (exclusiveParam !== undefined) {\r\n                throw new Error(key + ' parameter cannot be used together with ' + exclusiveParam + ' parameter');\r\n            }\r\n            exclusiveParam = key;\r\n        }\r\n\r\n        if (parameterOptions[key]['type'] === 'LatLon') {\r\n            params[key] = params[key];\r\n        }\r\n\r\n        validateParameter(key, params[key], parameterOptions[key]);\r\n\r\n        if (parameterOptions[key]['query']) {\r\n            queryParams[parameterOptions[key]['query']] = toQueryParamValue(params[key]);\r\n        }\r\n        else {\r\n            queryParams[key] = toQueryParamValue(params[key]);\r\n        }\r\n    });\r\n    return queryParams;\r\n}","import { Endpoint } from './endpoint';\r\nimport { Product } from '../response/product';\r\nimport { validateParameter, toQueryParamValue } from './parameters';\r\n\r\n/* class Glossary implements /glossary interface\r\n * */\r\nexport class Products extends Endpoint {\r\n\r\n    static parameters = {\r\n        'location': {\r\n            'type': 'string',\r\n            'allowArray': true\r\n        },\r\n        'start': {\r\n            'type': 'Date',\r\n            'allowArray': false\r\n        },\r\n        'end': {\r\n            'type': 'Date',\r\n            'allowArray': false\r\n        },\r\n        'office': {\r\n            'type': 'string',\r\n            'allowArray': true\r\n        },\r\n        'wmoid': {\r\n            'type': 'string',\r\n            'allowArray': true\r\n        },\r\n        'type': {\r\n            'type': 'string',\r\n            'allowArray': true\r\n        },\r\n        'limit': {\r\n            'type': 'number',\r\n            'allowArray': true\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        super('/products');\r\n    }\r\n\r\n    /**\r\n     * Returns a list of text products\r\n     * @param {object} params\r\n     */\r\n    async get(params) {\r\n\r\n        let queryParams = {};\r\n\r\n        Object.keys(Products.parameters).forEach(function (key) {\r\n            if (key in params) {\r\n                validateParameter(key, params[key], Products.parameters[key]);\r\n                queryParams[key] = toQueryParamValue(params[key]);\r\n            }\r\n        });\r\n\r\n        const data = await super.get(queryParams);\r\n        return Products.toProductList(data['@graph']);\r\n    }\r\n\r\n    /**\r\n     * Returns a specific text product\r\n     * @param {string} id\r\n     */\r\n    async getProduct(id) {\r\n        const data = await super.get([id]);\r\n            return new Product(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of valid text product types and codes\r\n     */\r\n    async getTypes() {\r\n        const data = await super.get(['types']);\r\n            // return dictionary when typeId not specified\r\n        return Products.toProductDictionary(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of valid text product types for a given issuance location\r\n     * @param {string} locationId\r\n     */\r\n    async getLocationTypes(locationId) {\r\n        if (!locationId) {\r\n            throw new Error('Missing required locationId parameter');\r\n        }\r\n        const data = await super.get(['locations', locationId, 'types']);\r\n            // return dictionary\r\n        return Products.toProductDictionary(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of valid text product issuance locations\r\n     */\r\n    async getLocations() {\r\n        const data = await super.get(['locations']);\r\n        return data['locations'];\r\n    }\r\n\r\n    /**\r\n     * Returns a list of valid text product issuance locations for a given product type\r\n     * @param {string} typeId\r\n     */\r\n    async getTypeLocations(typeId) {\r\n        if (!typeId) {\r\n            throw new Error('Missing required typeId parameter');\r\n        }\r\n        const data = await super.get(['types', typeId, 'locations']);\r\n        return data['locations'];\r\n    }\r\n\r\n    /**\r\n     * Returns a list of text products of a given type\r\n     * @param {string} typeId\r\n     */\r\n    async getTypeProducts(typeId) {\r\n        if (!typeId) {\r\n            throw new Error('Missing required typeId parameter');\r\n        }\r\n        const data = await super.get(['types', typeId]);\r\n            // returns array\r\n        return Products.toProductList(data['@graph']);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of text products of a given type for a given issuance location\r\n     * @param {string} typeId\r\n     * @param {string} locationId\r\n     */\r\n    async getTypeAndLocationProducts(typeId, locationId) {\r\n        if (!typeId) {\r\n            throw new Error('Missing required typeId parameter');\r\n        }\r\n        if (!locationId) {\r\n            throw new Error('Missing required locationId parameter');\r\n        }\r\n\r\n        const data = await super.get(['types', typeId, 'locations', locationId]);\r\n            // returns array\r\n        return Products.toProductList(data['@graph']);\r\n    }\r\n\r\n    static toProductList = (data) => {\r\n        let products: Product[] = [];\r\n        data.forEach(function (product) {\r\n            products.push(new Product(product));\r\n        });\r\n    \r\n        // newest first\r\n        products.sort((a, b) => {\r\n            if (a.issuanceTime.milliseconds == b.issuanceTime.milliseconds) {\r\n                return 0;\r\n            } else if (a.issuanceTime.milliseconds > b.issuanceTime.milliseconds) {\r\n                return 1;\r\n            }\r\n            return -a;\r\n        });\r\n    \r\n        return products;\r\n    };\r\n\r\n    static toProductDictionary = (data) => {\r\n        let products = {};\r\n        data['@graph'].forEach(function (product) {\r\n            products[product['productCode']] = product['productName'];\r\n        });\r\n        return products;\r\n    };\r\n    \r\n}\r\n\r\n// @factory NOAA.glossary(): Products\r\n// Creates a glossary term dictionary\r\nexport function toProducts() {\r\n    return new Products();\r\n}","/**\r\n * \r\n * @param {object} data\r\n * @param {function} callback\r\n */\r\nexport function featureCollectionToArray(data, callback) {\r\n    let array: any[] = [];\r\n    data['features'].forEach(function (feature, index) {\r\n        array.push(callback(feature, index));\r\n    });\r\n    return array;\r\n}","/* @class ValueUnit\r\n * @aka NOAA.ValueUnit\r\n *\r\n * Represents a class for value with units.\r\n * */\r\nexport class ValueUnits {\r\n\r\n    public value;\r\n    public unit;\r\n\r\n    constructor(value, units) {\r\n        if (typeof value !== 'number') {\r\n            throw new Error('Value must be a number');\r\n        }\r\n        this.value = value;\r\n        this.unit = units;\r\n    }\r\n\r\n    static parseUnit = function (s: string) {\r\n        return s.split(':')[1];\r\n    };\r\n}\r\n\r\nexport function toValueUnits(a, b?) {\r\n\r\n    if (typeof a === 'object') {\r\n        if ('value' in a && 'unitCode' in a) {\r\n            return new ValueUnits(a['value'], ValueUnits.parseUnit(a['unitCode']));\r\n        }\r\n        if ('value' in a && 'unit' in a) {\r\n            return new ValueUnits(a['value'], ValueUnits.parseUnit(a['unit']));\r\n        }\r\n    }\r\n    return new ValueUnits(a, b);\r\n}","import { Feature } from './feature';\r\nimport { featureCollectionToArray } from './feature-collection';\r\nimport { toValueUnits, ValueUnits } from '../../utils/value-units';\r\nimport { toTime } from '../../utils/time';\r\nimport { getUrlPart, getFeatureProperty } from './utils';\r\n\r\n/* @class Observation\r\n * @aka NOAA.Observation\r\n *\r\n * */\r\nexport class Observation extends Feature {\r\n\r\n    elevation: ValueUnits;\r\n    stationId: any;\r\n    timestamp: any;\r\n    rawMessage: any;\r\n    textDescription: any;\r\n    iconUrl: any;\r\n    presentWeather: any;\r\n    values: {};\r\n    cloudLayers: any[];\r\n\r\n    constructor(data) {\r\n        super(data);\r\n\r\n        this.elevation = toValueUnits(getFeatureProperty('elevation', data));\r\n        this.stationId = getUrlPart(getFeatureProperty('station', data, true), -1);\r\n        this.timestamp = toTime(getFeatureProperty('timestamp', data));\r\n        this.rawMessage = getFeatureProperty('rawMessage', data);\r\n        this.textDescription = getFeatureProperty('textDescription', data);\r\n        this.iconUrl = getFeatureProperty('icon', data);\r\n        this.presentWeather = getFeatureProperty('presentWeather', data);\r\n        this.values = {};\r\n\r\n        let values = [];\r\n        Object.keys(data['properties']).forEach(function (key) {\r\n            if (data['properties'][key] && data['properties'][key]['value'] && data['properties'][key]['unitCode']) {\r\n                values[key] = toValueUnits(data['properties'][key]);\r\n            }\r\n        });\r\n        this.values = values;\r\n\r\n        let cloudLayers = data['properties']['cloudLayers'];\r\n        if (cloudLayers) {\r\n            this.cloudLayers = [];\r\n            for (let i = 0; i < cloudLayers.length; i++) {\r\n                this.cloudLayers.push({\r\n                    'base': (cloudLayers['value'] && cloudLayers['unitCode']) ? toValueUnits(cloudLayers['base']) : null,\r\n                    'amount': cloudLayers['amount']\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function observationsToArray(data) {\r\n    return featureCollectionToArray(data, function (feature) {\r\n        return new Observation(feature);\r\n    });\r\n}","import { Endpoint } from './endpoint';\r\nimport { validateParameter, toQueryParamValue } from './parameters';\r\nimport { StateAreaCodes, MarineAreaCodes } from '../../utils/codes';\r\nimport { Station, stationsToArray } from '../response/station';\r\nimport { Observation, observationsToArray } from '../response/observation';\r\n\r\n/* class Stations implements /stations interface\r\n * */\r\nexport class Stations extends Endpoint {\r\n    \r\n    constructor() {\r\n        super('/stations');\r\n    }\r\n\r\n    /**\r\n     * Returns a list of observation stations\r\n     * @param {string|[string]} id\r\n     * @param {string|[string]} state\r\n     * @param {number} limit\r\n     */\r\n    async getStations(id, state, limit) {\r\n        let queryParameters = {};\r\n\r\n        if (id) {\r\n            validateParameter('id', id, {\r\n                'type': 'string',\r\n                'allowArray': true\r\n            });\r\n            queryParameters['id'] = toQueryParamValue(id);\r\n        }\r\n\r\n        if (state) {\r\n            validateParameter('state', state, {\r\n                'type': 'string',\r\n                'allowArray': true,\r\n                'allowedValues': Object.assign({}, StateAreaCodes, MarineAreaCodes)\r\n            });\r\n            queryParameters['state'] = toQueryParamValue(state);\r\n        }\r\n\r\n        if (limit != undefined) {\r\n            queryParameters['limit'] = limit;\r\n        }\r\n\r\n        const data = await super.get(queryParameters);\r\n            return stationsToArray(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of observation stations for an area\r\n     * @param {string|[string]} area\r\n     * @param {number?} limit\r\n     */\r\n    async getAreaStations(area, limit) {\r\n\r\n        let queryParameters = {};\r\n\r\n        validateParameter('area', area, {\r\n            'type': 'string',\r\n            'allowArray': true,\r\n            'allowedValues': Object.assign({}, StateAreaCodes, MarineAreaCodes)\r\n        });\r\n\r\n        queryParameters['state'] = toQueryParamValue(area);\r\n        if (limit != undefined) {\r\n            queryParameters['limit'] = limit;\r\n        }\r\n\r\n        const data = await super.get(queryParameters);\r\n            return stationsToArray(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of radar stations\r\n     * NOTE: returns 500\r\n     * */\r\n    async getRadarStations(id) {\r\n        let pathParameters = ['radar'];\r\n        if (id !== undefined) {\r\n            pathParameters.push(id);\r\n        }\r\n        const data = await super.get(pathParameters);\r\n        return data;\r\n    }\r\n\r\n    async getStation(id) {\r\n        const data = await super.get([id]);\r\n        return new Station(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of observations for a given station\r\n     * @param {string} id\r\n     * @param {Date?} start\r\n     * @param {Date?} end\r\n     * @param {number?} limit\r\n     */\r\n    async getObservations(id, start = undefined, end = undefined, limit = undefined) {\r\n        let queryParameters = {};\r\n\r\n        validateParameter('id', id, {\r\n            'type': 'string'\r\n        });\r\n\r\n        if (start) {\r\n            validateParameter('start', start, {\r\n                'type': 'Date'\r\n            });\r\n            queryParameters['start'] = toQueryParamValue(start);\r\n        }\r\n        if (end) {\r\n            validateParameter('end', end, {\r\n                'type': 'Date'\r\n            });\r\n            queryParameters['end'] = toQueryParamValue(end);\r\n        }\r\n        if (limit != undefined) {\r\n            queryParameters['limit'] = limit;\r\n        }\r\n\r\n        const data = await super.get([id, 'observations'], queryParameters);\r\n        return observationsToArray(data).sort(function (a, b) {\r\n            if (a.timestamp.milliseconds == b.timestamp.milliseconds) {\r\n                return 0;\r\n            }\r\n            if (a.timestamp.milliseconds > b.timestamp.milliseconds) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n\r\n    async getLatestObservations(id) {\r\n        validateParameter('id', id, {\r\n            'type': 'string'\r\n        });\r\n\r\n        const data = await super.get([id, 'observations', 'latest']);\r\n        return new Observation(data);\r\n    }\r\n\r\n    async getObservationsAtTime(id, time) {\r\n        validateParameter('id', id, {\r\n            'type': 'string'\r\n        });\r\n        validateParameter('time', id, {\r\n            'type': 'Date'\r\n        });\r\n\r\n        const data = await super.get([id, 'observations', time.toISOString()]);\r\n        return new Observation(data);\r\n    }\r\n}\r\n\r\n/* @factory NOAA.stations(): Object\r\n *\r\n */\r\nexport function toStations() {\r\n    return new Stations();\r\n}","import { Feature } from './feature';\r\nimport { featureCollectionToArray } from './feature-collection';\r\nimport { toStations } from '../endpoints/stations';\r\nimport { getUrlPart, getFeatureProperty } from './utils';\r\nimport { toValueUnits, ValueUnits } from '../../utils/value-units';\r\n\r\n/* @class Station\r\n * @aka NOAA.Station\r\n *\r\n * */\r\nexport class Station extends Feature {\r\n    id: string;\r\n    elevation: ValueUnits;\r\n    name: any;\r\n    timeZone: any;\r\n    forecastZone: any;\r\n    county: any;\r\n    fireWeatherZone: any;\r\n\r\n    constructor(data) {\r\n        if (typeof data === 'string') {\r\n            super(undefined);\r\n            this.id = data;\r\n        }\r\n        else {\r\n            super(data);\r\n\r\n            this.elevation = toValueUnits(getFeatureProperty('elevation', data));\r\n            this.id = getFeatureProperty('stationIdentifier', data);\r\n            this.name = getFeatureProperty('name', data);\r\n            this.timeZone = getFeatureProperty('timeZone', data);\r\n\r\n            this.forecastZone = getUrlPart(getFeatureProperty('forecast', data, true), -1);\r\n            this.county = getUrlPart(getFeatureProperty('county', data, true), -1);\r\n            this.fireWeatherZone = getUrlPart(getFeatureProperty('fireWeatherZone', data, true), -1);\r\n        }\r\n    }\r\n\r\n    get() {\r\n        return toStations().getStation(this.id );\r\n    }\r\n\r\n    getObservations(start, end) {\r\n        return toStations().getObservations(this.id, start, end);\r\n    }\r\n\r\n    getLatestObservations() {\r\n        return toStations().getLatestObservations(this.id);\r\n    }\r\n\r\n    getObservationsAtTime(time) {\r\n        return toStations().getObservationsAtTime(this.id, time);\r\n    }\r\n}\r\n\r\nexport function stationsToArray(data) {\r\n    return featureCollectionToArray(data, function (feature) {\r\n        return new Station(feature);\r\n    });\r\n}","import { getValue } from './utils';\r\n\r\nexport class ZoneForecastPeriod {\r\n    \r\n    number: number;\r\n    name: any;\r\n    detailedForecast: any;\r\n\r\n    constructor(data) {\r\n        this.number = parseInt(getValue('number', data));\r\n        this.name = getValue('name', data);\r\n        this.detailedForecast = getValue('detailedForecast', data);\r\n    }\r\n}","import { toTime } from '../../utils/time';\r\nimport { ZoneForecastPeriod } from './zone-forecast-period';\r\nimport { getValue } from './utils';\r\n\r\n/* @class ZoneForecast\r\n * @aka NOAA.ZoneForecast\r\n *\r\n * Represents response from /zones/{type}/{zoneId}/forecast endpoint.\r\n * */\r\nexport class ZoneForecast {\r\n    updated: any;\r\n    periods: any[];\r\n    \r\n    constructor(data) {\r\n        this.updated = toTime(getValue('updated', data));\r\n        this.periods = [];\r\n        if (data['periods']) {\r\n            for (let i = 0; i < data['periods'].length; i++) {\r\n                this.periods.push(new ZoneForecastPeriod(data['periods'][i]));\r\n            }\r\n        }\r\n    }\r\n}","import { Endpoint } from './endpoint';\r\nimport { Zone, zonesToArray } from '../response/zone';\r\nimport { validateParameter, toQueryParameters, toQueryParamValue } from './parameters';\r\nimport { stationsToArray } from '../response/station';\r\nimport { StateAreaCodes, MarineAreaCodes, RegionCodes } from '../../utils/codes';\r\nimport { ZoneForecast } from '../response/zone-forecast';\r\nimport { observationsToArray } from '../response/observation';\r\n\r\n/* class Zones implements /zones interface\r\n * */\r\nexport class Zones extends Endpoint {\r\n\r\n    static Types = {\r\n        'land': 'land',\r\n        'marine': 'marine',\r\n        'forecast': 'forecast',\r\n        'public': 'public',\r\n        'coastal': 'coastal',\r\n        'offshore': 'offshore',\r\n        'fire': 'fire',\r\n        'county': 'county'\r\n    };\r\n    \r\n    static parameterOptions = {\r\n        'id': {\r\n            'type': 'string',\r\n            'allowArray': true,\r\n        },\r\n        'area': {\r\n            'type': 'string',\r\n            'allowArray': true,\r\n            'allowedValues': Object.assign({}, StateAreaCodes, MarineAreaCodes)\r\n        },\r\n        'region': {\r\n            'type': 'string',\r\n            'allowArray': true,\r\n            'allowedValues': RegionCodes\r\n        },\r\n        'type': {\r\n            'type': 'string',\r\n            'allowArray': true,\r\n            'allowedValues': Zones.Types\r\n        },\r\n        'point': {\r\n            'type': 'LatLon',\r\n            'allowArray': false\r\n        },\r\n        'effective': {\r\n            'type': 'Date',\r\n            'allowArray': false\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        super('/zones');\r\n    }\r\n\r\n    /**\r\n     * Returns a list of zones\r\n     * @param {object} params\r\n     */\r\n    async get(params, includeGeometry) {\r\n        let queryParams;\r\n        if (params) {\r\n            queryParams = toQueryParameters(params, Zones.parameterOptions);\r\n        }\r\n        else {\r\n            queryParams = {};\r\n        }\r\n        if (includeGeometry) {\r\n            validateParameter('includeGeometry', includeGeometry, {\r\n                'type': 'boolean',\r\n                'allowArray': false\r\n            });\r\n            queryParams['include_geometry'] = includeGeometry;\r\n        }\r\n\r\n        const data = await super.get(queryParams);\r\n        return zonesToArray(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of zones of a given type\r\n     * @param {object} params\r\n     */\r\n    async getTypeZones(type, params, includeGeometry) {\r\n        let queryParams;\r\n\r\n        if (params) {\r\n            queryParams = toQueryParameters(params, Zones.parameterOptions);\r\n            if (params['type']) {\r\n                throw new Error('type parameter is not allowed for this call');\r\n            }\r\n        }\r\n        else {\r\n            queryParams = {};\r\n        }\r\n\r\n        validateParameter('type', type, {\r\n            'type': 'string',\r\n            'allowedValues': Zones.Types\r\n        });\r\n\r\n        if (includeGeometry) {\r\n            validateParameter('includeGeometry', includeGeometry, {\r\n                'type': 'boolean',\r\n                'allowArray': false\r\n            });\r\n            queryParams['include_geometry'] = includeGeometry;\r\n        }\r\n\r\n        const data = await super.get([type], queryParams);\r\n        return zonesToArray(data);\r\n    }\r\n\r\n    /**\r\n     * Returns metadata about a given zone\r\n     * @param {string} type\r\n     * @param {string} id\r\n     */\r\n    async getZone(type, id) {\r\n        validateParameter('id', type, {\r\n            'type': 'string'\r\n        });\r\n        validateParameter('type', type, {\r\n            'type': 'string',\r\n            'allowedValues': Zones.Types\r\n        });\r\n\r\n        const data = await super.get([type, id]);\r\n        return new Zone(data);\r\n    }\r\n\r\n    /**\r\n     * Returns the current zone forecast for a given zone\r\n     * @param {string} type\r\n     * @param {string} id\r\n     */\r\n    async getZoneForecast(type, id) {\r\n        validateParameter('id', type, {\r\n            'type': 'string'\r\n        });\r\n        validateParameter('type', type, {\r\n            'type': 'string',\r\n            'allowedValues': Zones.Types\r\n        });\r\n\r\n        const data = await super.get([type, id, 'forecast']);\r\n        return new ZoneForecast(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of observations for a given zone\r\n     * @param {string} type\r\n     * @param {string} id\r\n     * @param {Date?} start\r\n     * @param {Date?} end\r\n     * @param {number} limit\r\n     */\r\n    async getZoneObservations(id, start, end, limit) {\r\n        let queryParameters = {};\r\n        validateParameter('id', id, {\r\n            'type': 'string'\r\n        });\r\n        if (start) {\r\n            validateParameter('start', start, {\r\n                'type': 'Date'\r\n            });\r\n            queryParameters['start'] = toQueryParamValue(start);\r\n        }\r\n        if (end) {\r\n            validateParameter('end', end, {\r\n                'type': 'Date'\r\n            });\r\n            queryParameters['end'] = toQueryParamValue(end);\r\n        }\r\n        if (limit) {\r\n            validateParameter('limit', limit, {\r\n                'type': 'number'\r\n            });\r\n            queryParameters['limit'] = limit;\r\n        }\r\n\r\n        const data = await super.get(['forecast', id, 'observations']);\r\n        return observationsToArray(data);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of observation stations for a given zone\r\n     * @param {string} id\r\n     */\r\n    async getZoneStations(id) {\r\n        validateParameter('id', id, {\r\n            'type': 'string'\r\n        });\r\n        const data = await super.get(['forecast', id, 'stations']);\r\n        return stationsToArray(data);\r\n    }\r\n}\r\n\r\n/* @factory NOAA.zones(): Object\r\n *\r\n */\r\nexport function toZones() {\r\n    return new Zones();\r\n}","import { featureCollectionToArray } from './feature-collection';\r\nimport { toZones } from '../endpoints/zones';\r\nimport { getUrlPart, getFeatureProperty } from './utils';\r\nimport { Geometry, toGeometry } from './geometry';\r\n\r\n/* @class Zone\r\n * @aka NOAA.Zone\r\n *\r\n * Represents response from /zones endpoint.\r\n * */\r\nexport class Zone {\r\n    type: any;\r\n    id: any;\r\n    name: any;\r\n    state: any;\r\n    geometry: Geometry;\r\n    forecastOffices: any[];\r\n    timeZones: any[];\r\n\r\n    constructor(data) {\r\n        if (typeof data === 'string') {\r\n            this.type = getUrlPart(data, -2);\r\n            this.id = getUrlPart(data, -1);\r\n        }\r\n        else {\r\n            let i;\r\n\r\n            this.id = getFeatureProperty('id', data);\r\n            this.type = getFeatureProperty('type', data);\r\n            this.name = getFeatureProperty('name', data, true);\r\n            this.state = getFeatureProperty('state', data, true);\r\n\r\n            if (data['geometry']) {\r\n                this.geometry = toGeometry(data['geometry']);\r\n            }\r\n\r\n            this.forecastOffices = [];\r\n            for (i = 0; data['properties']['forecastOffices'] && i < data['properties']['forecastOffices'].length; i++) {\r\n                this.forecastOffices.push(getUrlPart(data['properties']['forecastOffices'][i], -1));\r\n            }\r\n\r\n            this.timeZones = [];\r\n            for (i = 0; data['properties']['timeZone'] && i < data['properties']['timeZone'].length; i++) {\r\n                this.timeZones.push(data['properties']['timeZone'][i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getZone() {\r\n        return toZones().getZone(this.type, this.id);\r\n    }\r\n\r\n    getZoneForecast() {\r\n        return toZones().getZoneForecast(this.type, this.id);\r\n    }\r\n\r\n    getZoneStations() {\r\n        return toZones().getZoneStations(this.id);\r\n    }\r\n\r\n    getZoneObservations(start, end, limit) {\r\n        return toZones().getZoneObservations(this.id, start, end, limit);\r\n    }\r\n}\r\n\r\nexport function zonesToArray(data) {\r\n    return featureCollectionToArray(data, function (feature) {\r\n        return new Zone(feature);\r\n    });\r\n}","import { getUrlPart, getValue } from './utils';\r\nimport { toProducts } from '../endpoints/products';\r\nimport { Zone } from './zone';\r\nimport { Station } from './station';\r\n\r\n/* @class Office\r\n * @aka NOAA.Office\r\n *\r\n * */\r\nexport class Office {\r\n    id: string;\r\n    name: any;\r\n    address: any;\r\n    telephone: any;\r\n    fax: any;\r\n    email: any;\r\n    url: any;\r\n    nwsRegion: any;\r\n    parentOrganization: any;\r\n    responsibleCounties: any[];\r\n    responsibleForecastZones: any[];\r\n    responsibleFireZones: any[];\r\n    approvedObservationStations: any[];\r\n    \r\n    constructor(data) {\r\n        if (typeof data === 'string') {\r\n            this.id = data;\r\n        }\r\n        else {\r\n            this.id = getValue('id', data);\r\n            this.name = getValue('name', data);\r\n            this.address = getValue('address', data);\r\n            this.telephone = getValue('telephone', data);\r\n            this.fax = getValue('faxNumber', data);\r\n            this.email = getValue('email', data);\r\n            this.url = getValue('sameAs', data);\r\n            this.nwsRegion = getValue('nwsRegion', data);\r\n            this.parentOrganization = getUrlPart(getValue('parentOrganization', data), -1);\r\n            this.responsibleCounties = this.getZones('responsibleCounties', data);\r\n            this.responsibleForecastZones = this.getZones('responsibleForecastZones', data);\r\n            this.responsibleFireZones = this.getZones('responsibleFireZones', data);\r\n            this.approvedObservationStations = this.getStations('approvedObservationStations', data);\r\n        }\r\n    }\r\n\r\n    getZones(key, data) {\r\n        let list: any[] = [];\r\n        if (data[key]) {\r\n            for (let i = 0; i < data[key].length; i++) {\r\n                list.push(new Zone(data[key][i]));\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getStations(key, data) {\r\n        let list: any[] = [];\r\n        if (data[key]) {\r\n            for (let i = 0; i < data[key].length; i++) {\r\n                list.push(new Station(getUrlPart(data[key][i], -1)));\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getAreaForecastDiscussion() {\r\n        return toProducts().get({\r\n            'location': this.id,\r\n            'type': 'AFD'\r\n        });\r\n    }\r\n\r\n    getProductTypes() {\r\n        return toProducts().getLocationTypes(this.id);\r\n    }\r\n\r\n    getProducts(params) {\r\n        params['location'] = this.id;\r\n        return toProducts().get(params);\r\n    }\r\n}","import { Feature } from './feature';\r\nimport { toValueUnits, ValueUnits } from '../../utils/value-units';\r\nimport { getFeatureProperty } from './utils';\r\n\r\n/* @class Point\r\n * @aka NOAA.Point\r\n *\r\n * Represents response from /points endpoint.\r\n * */\r\nclass RelativeLocation extends Feature {\r\n    city: any;\r\n    state: any;\r\n    distance: ValueUnits;\r\n    bearing: ValueUnits;\r\n    \r\n    constructor(data) {\r\n        super(data);\r\n\r\n        this.city = getFeatureProperty('city', data);\r\n        this.state = getFeatureProperty('state', data);\r\n        this.distance = toValueUnits(getFeatureProperty('distance', data));\r\n        this.bearing = toValueUnits(getFeatureProperty('bearing', data));\r\n    }\r\n}\r\n\r\nexport function toRelativeLocation(data) {\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return new RelativeLocation(data);\r\n}\r\n\r\nexport { RelativeLocation };","import { toTime } from '../../utils/time';\r\n\r\nexport const millisecondsPerHour = 60 * 60 * 1000;\r\n\r\nexport class ValidTimePeriod {\r\n    \r\n    time: any;\r\n    hours: number;\r\n    days: number;\r\n    totalHours: any;\r\n    _array: any;\r\n\r\n    constructor(s) {\r\n        let parts = s.split('/');\r\n        if (parts.length !== 2) {\r\n            throw new Error('Invalid valid time value (' + s + ')');\r\n        } \r\n\r\n        this.time = toTime(parts[0]);\r\n        this.hours = 0;\r\n        this.days = 0;\r\n\r\n        //period parsing\r\n        let period = parts[1], num = 0;\r\n        if (period[0] !== 'P') {\r\n            throw new Error('Invalid valid time period value (' + parts[1] + ')');\r\n        }\r\n\r\n        for (let i = 1; i < period.length; i++) {\r\n            if (period.charAt(i) >= '0' && period.charAt(i) <= '9') {\r\n                num = num * 10 + (period.charCodeAt(i) - '0'.charCodeAt(0));\r\n                continue;\r\n            }\r\n            if (period.charAt(i) === 'T') {\r\n                num = 0;\r\n                continue;\r\n            }\r\n            if (period.charAt(i) === 'D') {\r\n                this.days = num;\r\n                num = 0;\r\n                continue;\r\n            }\r\n            if (period.charAt(i) === 'H') {\r\n                this.hours = num;\r\n                num = 0;\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (this.days === 0 && this.hours === 0) {\r\n            throw new Error('Invalid valid time period (' + period + ')');\r\n        }\r\n\r\n        this.totalHours = this.days * 24 + this.hours;\r\n    }\r\n\r\n    toArray() {\r\n        if (this._array) {\r\n            return this._array;\r\n        }\r\n        this._array = [];\r\n        for (let i = 0; i < this.totalHours; i++) {\r\n            this._array.push(toTime(this.time.milliseconds + (i * millisecondsPerHour)));\r\n        }\r\n        return this._array;\r\n    }\r\n}\r\n\r\nexport function toValidTimePeriod(a) {\r\n    return new ValidTimePeriod(a);\r\n}","import { Feature } from './feature';\r\nimport { Office } from './office';\r\nimport { toXY } from '../../utils/xy';\r\nimport { ValueUnits, toValueUnits } from '../../utils/value-units';\r\nimport { toValidTimePeriod, millisecondsPerHour, ValidTimePeriod } from './valid-time-period';\r\nimport { toTime } from '../../utils/time';\r\nimport { getFeatureProperty } from './utils';\r\n\r\n/* @class GridPoint\r\n * @aka NOAA.GridPoint\r\n *\r\n * Represents response from /gridpoints endpoint.\r\n * */\r\nexport class GridPoint extends Feature {\r\n    xy: any;\r\n    office: Office;\r\n    elevation: ValueUnits;\r\n    updateTime: any;\r\n    validTimes: ValidTimePeriod;\r\n    values: {};\r\n\r\n    static variables: any;\r\n\r\n    constructor(data) {\r\n        super(data);\r\n\r\n        this.xy = toXY(getFeatureProperty('gridX', data), getFeatureProperty('gridY', data));\r\n        this.office = new Office(getFeatureProperty('gridId', data));\r\n        this.elevation = toValueUnits(getFeatureProperty('elevation', data));\r\n        this.updateTime = toTime(getFeatureProperty('updateTime', data));\r\n        this.validTimes = toValidTimePeriod(getFeatureProperty('validTimes', data));\r\n        this.values = {};\r\n        for (let i = 0; i < GridPoint.variables.length; i++) {\r\n            this.values[GridPoint.variables[i]] = this.getVariable(GridPoint.variables[i], data);\r\n        }\r\n    }\r\n\r\n    getVariable(name, data) {\r\n        let variableData = getFeatureProperty(name, data),\r\n            units,\r\n            values,\r\n            item;\r\n\r\n        if (variableData['uom']) {\r\n            units = ValueUnits.parseUnit(variableData['uom']);\r\n        }\r\n\r\n        if (variableData['values'] && variableData['values'].length > 0) {\r\n            values = [];\r\n\r\n            if (variableData['sourceUnit']) {\r\n                values['sourceUnit'] = variableData['sourceUnit'];\r\n            }\r\n\r\n            for (let i = 0; i < variableData['values'].length; i++) {\r\n                //value can be null\r\n                if (variableData['values'][i]['value'] !== null) {\r\n                    if (typeof variableData['values'][i]['value'] === 'number') {\r\n                        item = toValueUnits(variableData['values'][i]['value'], units);\r\n                    }\r\n                    else {\r\n                        item = variableData['values'][i]['value'];\r\n                        if (Array.isArray(item)) {\r\n                            item.forEach(v => {\r\n                                for (let key in v) {\r\n                                    if (v[key] && v[key]['unit'] && v[key]['value']) {\r\n                                        v[key] = toValueUnits(v[key]);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    item['validTime'] = toValidTimePeriod(variableData['values'][i]['validTime']);\r\n                    values.push(item);\r\n                }\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n\r\n    mapToValidTimes(variable) {\r\n        let timeValueDict = {},\r\n            validTime,\r\n            i,\r\n            hour;\r\n\r\n        if (this.values[variable] !== undefined && this.values[variable].length) {\r\n            for (i = 0; i < this.values[variable].length; i++) {\r\n                validTime = this.values[variable][i].validTime;\r\n\r\n                for (hour = 0; hour < validTime.totalHours; hour++) {\r\n                    timeValueDict[validTime.time.milliseconds + hour * millisecondsPerHour] = this.values[variable][i];\r\n                }\r\n            }\r\n            return this.validTimes.toArray().map(t => timeValueDict[t.milliseconds]);\r\n        }\r\n    }\r\n}\r\n\r\nGridPoint.variables = [\r\n    'temperature',\r\n    'dewpoint',\r\n    'maxTemperature',\r\n    'minTemperature',\r\n    'relativeHumidity',\r\n    'apparentTemperature',\r\n    'heatIndex',\r\n    'windChill',\r\n    'skyCover',\r\n    'windDirection',\r\n    'windSpeed',\r\n    'windGust',\r\n    'probabilityOfPrecipitation',\r\n    'quantitativePrecipitation',\r\n    'iceAccumulation',\r\n    'snowfallAmount',\r\n    'snowLevel',\r\n    'ceilingHeight',\r\n    'visibility',\r\n    'transportWindSpeed',\r\n    'transportWindDirection',\r\n    'mixingHeight',\r\n    'hainesIndex',\r\n    'lightningActivityLevel',\r\n    'twentyFootWindSpeed',\r\n    'twentyFootWindDirection',\r\n    'waveHeight',\r\n    'wavePeriod',\r\n    'waveDirection',\r\n    'primarySwellHeight',\r\n    'primarySwellDirection',\r\n    'secondarySwellHeight',\r\n    'secondarySwellDirection',\r\n    'wavePeriod2',\r\n    'windWaveHeight',\r\n    'dispersionIndex',\r\n    'pressure',\r\n    'probabilityOfTropicalStormWinds',\r\n    'probabilityOfHurricaneWinds',\r\n    'potentialOf15mphWinds',\r\n    'potentialOf25mphWinds',\r\n    'potentialOf35mphWinds',\r\n    'potentialOf45mphWinds',\r\n    'potentialOf20mphWindGusts',\r\n    'potentialOf30mphWindGusts',\r\n    'potentialOf40mphWindGusts',\r\n    'potentialOf50mphWindGusts',\r\n    'potentialOf60mphWindGusts',\r\n    'grasslandFireDangerIndex',\r\n    'probabilityOfThunder',\r\n    'davisStabilityIndex',\r\n    'atmosphericDispersionIndex',\r\n    'lowVisibilityOccurrenceRiskIndex',\r\n    'stability',\r\n    'redFlagThreatIndex',\r\n    'weather',\r\n    'hazards'\r\n];","import { toTime } from '../../utils/time';\r\nimport { toValueUnits, ValueUnits } from '../../utils/value-units';\r\nimport { getValue } from './utils';\r\n\r\n/*\r\n    \"number\": 3,\r\n    \"name\": \"Thursday\",\r\n    \"startTime\": \"2019-06-13T06:00:00-05:00\",\r\n    \"endTime\": \"2019-06-13T18:00:00-05:00\",\r\n    \"isDaytime\": true,\r\n    \"temperature\": 76,\r\n    \"temperatureUnit\": \"F\",\r\n    \"temperatureTrend\": null,\r\n    \"windSpeed\": \"0 to 10 mph\",\r\n    \"windDirection\": \"SW\",\r\n    \"icon\": \"https://api.weather.gov/icons/land/day/few?size=medium\",\r\n    \"shortForecast\": \"Sunny\",\r\n    \"detailedForecast\": \"Sunny, with a high near 76. Southwest wind 0 to 10 mph.\"\r\n*/\r\n\r\nexport class ForecastPeriod {\r\n    number: number;\r\n    name: any;\r\n    startTime: any;\r\n    endTime: any;\r\n    isDaytime: any;\r\n    temperature: ValueUnits;\r\n    temperatureTrend: any;\r\n    windSpeed: any;\r\n    windDirection: any;\r\n    icon: any;\r\n    shortForecast: any;\r\n    detailedForecast: any;\r\n\r\n    constructor(data) {\r\n        this.number = parseInt(getValue('number', data));\r\n        this.name = getValue('name', data);\r\n        this.startTime = toTime(getValue('startTime', data));\r\n        this.endTime = toTime(getValue('endTime', data));\r\n        this.isDaytime = getValue('isDaytime', data);\r\n        this.temperature = toValueUnits(getValue('temperature', data), getValue('temperatureUnit', data));\r\n        this.temperatureTrend = getValue('temperatureTrend', data);\r\n        this.windSpeed = getValue('windSpeed', data);\r\n        this.windDirection = getValue('windDirection', data);\r\n        this.icon = getValue('icon', data);\r\n        this.shortForecast = getValue('shortForecast', data);\r\n        this.detailedForecast = getValue('detailedForecast', data);\r\n    }\r\n}","import { Feature } from './feature';\r\nimport { toValueUnits, ValueUnits } from '../../utils/value-units';\r\nimport { toTime } from '../../utils/time';\r\nimport { toValidTimePeriod, ValidTimePeriod } from './valid-time-period';\r\nimport { ForecastPeriod } from './forecast-period';\r\nimport { getFeatureProperty } from './utils';\r\n\r\n/* @class Forecast\r\n * @aka NOAA.Forecast\r\n *\r\n * Represents response from /gridpoints/{wfo}/{x},{y}/forecast endpoint.\r\n * */\r\nexport class Forecast extends Feature {\r\n    units: any;\r\n    forecastGenerator: any;\r\n    generatedAt: any;\r\n    updateTime: any;\r\n    validTimes: ValidTimePeriod;\r\n    elevation: ValueUnits;\r\n    periods: ForecastPeriod[];\r\n\r\n    constructor(data) {\r\n        super(data);\r\n\r\n        this.units = getFeatureProperty('units', data);\r\n        this.forecastGenerator = getFeatureProperty('forecastGenerator', data);\r\n        this.generatedAt = toTime(getFeatureProperty('generatedAt', data));\r\n        this.updateTime = toTime(getFeatureProperty('updateTime', data));\r\n        this.validTimes = toValidTimePeriod(getFeatureProperty('validTimes', data));\r\n        this.elevation = toValueUnits(getFeatureProperty('elevation', data));\r\n        this.periods = [];\r\n        for (let i = 0; i < getFeatureProperty('periods', data).length; i++) {\r\n            this.periods.push(new ForecastPeriod(getFeatureProperty('periods', data)[i]));\r\n        }\r\n    }\r\n}","import { Endpoint } from './endpoint';\r\nimport { toXY } from '../../utils/xy';\r\nimport { stationsToArray } from '../response/station';\r\nimport { GridPoint } from '../response/gridpoint';\r\nimport { Forecast } from '../response/forecast';\r\n\r\n/* class GridPoints implements /gridpoints interface\r\n * */\r\nexport class GridPoints extends Endpoint {\r\n    weatherForecastOffice: any;\r\n    xy: any;\r\n    /**\r\n     * \r\n     * @param {string} weatherForecastOffice\r\n     * @param {XY} xy\r\n     */\r\n    constructor(weatherForecastOffice, xy) {\r\n        super('/gridpoints');\r\n        this.weatherForecastOffice = weatherForecastOffice;\r\n        this.xy = xy;\r\n    }\r\n\r\n    async get(): Promise<GridPoint> {\r\n        const data = await super.get([this.weatherForecastOffice, this.xy]);\r\n        return new GridPoint(data);\r\n    }\r\n\r\n    async getForecast(units?): Promise<any> {\r\n        if (units === undefined) {\r\n            units = 'us';\r\n        }\r\n        const data = await super.get([this.weatherForecastOffice, this.xy, 'forecast'], { 'units': units });\r\n            return new Forecast(data);\r\n    }\r\n\r\n    async getForecastHourly(units?) {\r\n        if (units === undefined) {\r\n            units = 'us';\r\n        }\r\n        const data = await super.get([this.weatherForecastOffice, this.xy, 'forecast', 'hourly'], { 'units': units });\r\n        return new Forecast(data);\r\n    }\r\n\r\n    async getStations() {\r\n        const data = await super.get([this.weatherForecastOffice, this.xy, 'stations']);\r\n        return stationsToArray(data);\r\n    }\r\n}\r\n\r\n// @factory NOAA.gridPoints(weatherForecastOffice:string, x: number, y:number): GridPoints\r\n// Creates an object representing /gridpoints endpoint\r\nexport function toGridPoints(weatherForecastOffice, x, y?): GridPoints {\r\n    return new GridPoints(weatherForecastOffice, toXY(x, y));\r\n}","import { Zone } from './zone';\r\nimport { toTime } from '../../utils/time';\r\nimport { getFeatureProperty } from './utils';\r\n\r\n/* @class Alert\r\n * @aka NOAA.Alert\r\n *\r\n * Represents response from /points endpoint.\r\n * */\r\nexport class Alert {\r\n    id: any;\r\n    areaDescription: any;\r\n    geocode: any;\r\n    affectedZones: any[];\r\n    references: any;\r\n    sent: any;\r\n    effective: any;\r\n    onset: any;\r\n    expires: any;\r\n    ends: any;\r\n    status: any;\r\n    messageType: any;\r\n    category: any;\r\n    severity: any;\r\n    certainty: any;\r\n    urgency: any;\r\n    event: any;\r\n    sender: any;\r\n    senderName: any;\r\n    headline: any;\r\n    description: any;\r\n    instruction: any;\r\n    response: any;\r\n    parameters: any;\r\n    \r\n    constructor(data) {\r\n        this.id = getFeatureProperty('id', data);\r\n        this.areaDescription = getFeatureProperty('areaDesc', data);\r\n        this.geocode = getFeatureProperty('geocode', data);\r\n\r\n        this.affectedZones = [];\r\n        let affectedZones = getFeatureProperty('affectedZones', data), i;\r\n        for (i = 0; i < affectedZones.length; i++) {\r\n            this.affectedZones.push(new Zone(affectedZones[i]));\r\n        }\r\n\r\n        this.references = getFeatureProperty('references', data);\r\n\r\n        this.sent = toTime(getFeatureProperty('sent', data));\r\n        this.effective = toTime(getFeatureProperty('effective', data));\r\n        this.onset = toTime(getFeatureProperty('onset', data));\r\n        this.expires = toTime(getFeatureProperty('expires', data));\r\n        this.ends = toTime(getFeatureProperty('ends', data));\r\n\r\n        this.status = getFeatureProperty('status', data);\r\n        this.messageType = getFeatureProperty('messageType', data);\r\n        this.category = getFeatureProperty('category', data);\r\n        this.severity = getFeatureProperty('severity', data);\r\n        this.certainty = getFeatureProperty('certainty', data);\r\n        this.urgency = getFeatureProperty('urgency', data);\r\n\r\n        this.event = getFeatureProperty('event', data);\r\n        this.sender = getFeatureProperty('sender', data);\r\n        this.senderName = getFeatureProperty('senderName', data);\r\n        this.headline = getFeatureProperty('headline', data);\r\n        this.description = getFeatureProperty('description', data);\r\n        this.instruction = getFeatureProperty('instruction', data);\r\n        this.response = getFeatureProperty('response', data);\r\n\r\n        this.parameters = getFeatureProperty('parameters', data);\r\n    }\r\n}\r\n","import { toTime } from '../../utils/time';\r\nimport { Alert } from './alert';\r\nimport { toAlerts } from '../endpoints/alerts';\r\n\r\n\r\n/* @class AlertCollection\r\n * @aka NOAA.AlertCollection\r\n *\r\n * Represents response from /alerts endpoint.\r\n * */\r\nexport class AlertCollection {\r\n\r\n    public title;\r\n    public updated;\r\n    public alerts;\r\n    public next;\r\n    public isComplete;\r\n\r\n    constructor(data) {\r\n        this.title = data['title'];\r\n        this.updated = toTime(data['updated']);\r\n        this.alerts = [];\r\n        if (data['features']) {\r\n            for (let i = 0; i < data['features'].length; i++) {\r\n                this.alerts.push(new Alert(data['features'][i]));\r\n            }\r\n        }\r\n\r\n        if (data['pagination']) {\r\n            this.next = data['pagination']['next'];\r\n            this.isComplete = false;\r\n        }\r\n        else {\r\n            this.isComplete = true;\r\n        }\r\n    }\r\n\r\n    getNext() {\r\n        return toAlerts().getNext(this.next);\r\n    }\r\n}","import { Endpoint } from './endpoint';\r\nimport { StateAreaCodes, MarineAreaCodes, RegionCodes } from '../../utils/codes';\r\nimport { AlertCollection } from '../response/alert-collection';\r\nimport { Alert } from '../response/alert';\r\nimport { toQueryParameters } from './parameters';\r\n\r\n/* class Alerts implements /alerts interface\r\n * */\r\nexport class Alerts extends Endpoint {\r\n\r\n    static Status = {\r\n        'actual': 'actual',\r\n        'exercise': 'exercise',\r\n        'system': 'system',\r\n        'test': 'test',\r\n        'draft': 'draft'\r\n    };\r\n    \r\n    static MessageType = {\r\n        'alert': 'alert',\r\n        'update': 'update',\r\n        'cancel': 'cancel'\r\n    };\r\n    \r\n    static RegionType = {\r\n        'land': 'land',\r\n        'marine': 'marine'\r\n    };\r\n    \r\n    \r\n    static Urgency = {\r\n        'unknown': 'unknown',\r\n        'past': 'past',\r\n        'future': 'future',\r\n        'expected': 'expected',\r\n        'immediate': 'immediate'\r\n    };\r\n    \r\n    static Severity = {\r\n        'unknown': 'unknown',\r\n        'minor': 'minor',\r\n        'moderate': 'moderate',\r\n        'severe': 'severe',\r\n        'extreme': 'extreme'\r\n    };\r\n    \r\n    static Certainty = {\r\n        'unknown': 'unknown',\r\n        'unlikely': 'unlikely',\r\n        'possible': 'possible',\r\n        'likely': 'likely',\r\n        'observed': 'observed'\r\n    };\r\n    \r\n    static parameterOptions = {\r\n        'active': {\r\n            'query': 'active',\r\n            'type': 'boolean'\r\n        },\r\n        'start': {\r\n            'query': 'start'\r\n        },\r\n        'end': {\r\n            'query': 'end'\r\n        },\r\n        'status': {\r\n            'query': 'status',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'allowedValues': Alerts.Status\r\n        },\r\n        'messageType': {\r\n            'query': 'message_type',\r\n            'allowArray': true,\r\n            'type': 'string'\r\n        },\r\n        'event': {\r\n            'query': 'event',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'allowedValues': Alerts.MessageType\r\n        },\r\n        'code': {\r\n            'query': 'code',\r\n            'allowArray': true,\r\n            'type': 'string'\r\n        },\r\n        'regionType': {\r\n            'query': 'region_type',\r\n            'allowArray': false,\r\n            'type': 'string',\r\n            'exclusive': true,\r\n            'allowedValues': Alerts.RegionType\r\n        },\r\n        'point': {\r\n            'type': 'LatLon',\r\n            'query': 'point',\r\n            'exclusive': true\r\n        },\r\n        'region': {\r\n            'query': 'region',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'exclusive': true,\r\n            'allowedValues': RegionCodes\r\n        },\r\n        'area': {\r\n            'query': 'area',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'exclusive': true,\r\n            'allowedValues': Object.assign({}, StateAreaCodes, MarineAreaCodes)\r\n        },\r\n        'zone': {\r\n            'query': 'zone',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'exclusive': true\r\n        },\r\n        'urgency': {\r\n            'query': 'urgency',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'allowedValues': Alerts.Urgency\r\n        },\r\n        'severity': {\r\n            'query': 'severity',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'allowedValues': Alerts.Severity\r\n        },\r\n        'certainty': {\r\n            'query': 'certainty',\r\n            'allowArray': true,\r\n            'type': 'string',\r\n            'allowedValues': Alerts.Certainty\r\n        },\r\n        'limit': {\r\n            'query': 'limit',\r\n            'type': 'number'\r\n        },\r\n        'cursor': {\r\n            'query': 'cursor',\r\n            'type': 'string'\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        super('/alerts');\r\n    }\r\n\r\n    async get(params = {}) {\r\n        const data = super.get(toQueryParameters(params, Alerts.parameterOptions));\r\n            return new AlertCollection(data);\r\n    }\r\n\r\n    async getNext(url) {\r\n        const data = super.get(url);\r\n            return new AlertCollection(data);\r\n    }\r\n\r\n    async getActive(params = {}) {\r\n        const data = super.get(['active'], toQueryParameters(params, Alerts.parameterOptions));\r\n            return new AlertCollection(data);\r\n    }\r\n\r\n    async getTypes() {\r\n        const data = super.get(['types']);\r\n            return data['eventTypes'];\r\n    }\r\n\r\n    async getAlert(id) {\r\n        const data = super.get([id]);\r\n            return new Alert(data);\r\n    }\r\n\r\n    async getActiveCount() {\r\n        const data = super.get(['active', 'count']);\r\n            return data;\r\n    }\r\n\r\n    async getZoneActive(zoneId) {\r\n        const data = super.get(['active', 'zone', zoneId]);\r\n            return new AlertCollection(data);\r\n    }\r\n\r\n    async getAreaActive(area) {\r\n        if (area in MarineAreaCodes || area in StateAreaCodes) {\r\n            const data = super.get(['active', 'area', area]);\r\n                return new AlertCollection(data);\r\n        }\r\n        else {\r\n            throw new Error('Invalid area code (' + area + ')');\r\n        }\r\n    }\r\n\r\n    async getRegionActive(region) {\r\n        if (region in RegionCodes) {\r\n            const data = super.get(['active', 'region', region]);\r\n                return new AlertCollection(data);\r\n        }\r\n        else {\r\n            throw new Error('Invalid region code (' + region + ')');\r\n        }\r\n    }\r\n}\r\n\r\n/* @factory NOAA.alerts(): Object\r\n *\r\n */\r\nexport function toAlerts() {\r\n    return new Alerts();\r\n}","import { Feature } from './feature';\r\nimport { Office } from './office';\r\nimport { RelativeLocation, toRelativeLocation } from './relative-location';\r\nimport { toGridPoints } from '../endpoints/gridpoints';\r\nimport { toAlerts } from '../endpoints/alerts';\r\nimport { toStations } from '../endpoints/stations';\r\nimport { toXY } from '../../utils/xy';\r\nimport { getUrlPart, getFeatureProperty } from './utils';\r\nimport { GridPoint } from './gridpoint';\r\n\r\n\r\n/* @class Point\r\n * @aka NOAA.Point\r\n *\r\n * Represents response from /points endpoint.\r\n * */\r\nclass Point extends Feature {\r\n    xy: any;\r\n    office: Office;\r\n    forecastZone: any;\r\n    timeZone: any;\r\n    radarStation: any;\r\n    relativeLocation: RelativeLocation | null;\r\n    county: any;\r\n    fireWeatherZone: any;\r\n\r\n    constructor(data) {\r\n        super(data);\r\n\r\n        this.xy = toXY(getFeatureProperty('gridX', data), getFeatureProperty('gridY', data));\r\n        this.office = new Office(getFeatureProperty('cwa', data));\r\n        this.forecastZone = getUrlPart(getFeatureProperty('forecastZone', data), -1);\r\n        this.timeZone = getFeatureProperty('timeZone', data);\r\n        this.radarStation = getFeatureProperty('radarStation', data);\r\n        this.relativeLocation = toRelativeLocation(getFeatureProperty('relativeLocation', data));\r\n\r\n        // optional properties\r\n        this.county = getUrlPart(getFeatureProperty('county', data, true), -1);\r\n        this.fireWeatherZone = getUrlPart(getFeatureProperty('fireWeatherZone', data, true), -1);\r\n    }\r\n\r\n    async getAlerts(params = {}) {\r\n        params['point'] = this.geometry.latlon;\r\n        return await toAlerts().get(params);\r\n    }\r\n\r\n    async getGridPoint() : Promise<GridPoint> {\r\n        return await toGridPoints(this.office.id, this.xy).get();\r\n    }\r\n\r\n    async getGridPointForecast() {\r\n        return await toGridPoints(this.office.id, this.xy).getForecast();\r\n    }\r\n\r\n    async getGridPointForecastHourly() {\r\n        return await toGridPoints(this.office.id, this.xy).getForecastHourly();\r\n    }\r\n\r\n    async getGridPointStations() {\r\n        return await toGridPoints(this.office.id, this.xy).getStations();\r\n    }\r\n}\r\n\r\nexport { Point };","import { Endpoint } from './endpoint';\r\nimport { Point } from '../response/point';\r\nimport { stationsToArray } from '../response/station';\r\n\r\n/* class Points implements /points interface\r\n * */\r\nexport class Points extends Endpoint {\r\n    latlon: any;\r\n    /**\r\n     * \r\n     * @param {LatLon} latlon\r\n     */\r\n    constructor(latlon: any) {\r\n        super('/points');\r\n        this.latlon = latlon;\r\n    }\r\n\r\n    async get(): Promise<Point> {\r\n        const data = await super.get([this.latlon]);\r\n        return new Point(data);\r\n    }\r\n\r\n    async getStations() {\r\n        const data = await super.get([this.latlon, 'stations']);\r\n        return stationsToArray(data);\r\n    }\r\n}\r\n\r\n// @factory NOAA.points(latlon: LatLon): Points\r\n// Creates an object representing /points endpoint\r\n\r\n// @alternative\r\n// @factory NOAA.points(coords: Array): Points\r\n\r\n// @alternative\r\n// @factory NOAA.points(coords: Object): Points\r\nexport function toPoints(a): Points {\r\n    return new Points(a);\r\n}","import { Endpoint } from './endpoint';\r\n\r\n/* class Glossary implements /glossary interface\r\n * */\r\nexport class Glossary extends Endpoint {\r\n    constructor() {\r\n        super('/glossary');\r\n    }\r\n\r\n    async get() {\r\n        const data = await super.get();\r\n        let terms = {};\r\n        data['glossary'].forEach(function (term) {\r\n            terms[term['term']] = term['definition'];\r\n        });\r\n        return terms;\r\n    }\r\n}\r\n\r\n// @factory NOAA.glossary(): Object\r\n// Creates a glossary term dictionary\r\nexport function toGlossary() {\r\n    return new Glossary();\r\n}","import { Endpoint } from './endpoint';\r\n\r\n/* class Glossary implements /glossary interface\r\n * */\r\nexport class Icons extends Endpoint {\r\n    constructor() {\r\n        super('/icons');\r\n    }\r\n\r\n    async get() {\r\n        const data = await super.get();\r\n        return data['icons'];\r\n    }\r\n}\r\n\r\n// @factory NOAA.glossary(): Object\r\n// Creates a glossary term dictionary\r\nexport function toIcons() {\r\n    return new Icons();\r\n}","import { Endpoint } from './endpoint';\r\nimport { Office } from '../response/office';\r\n\r\n/* class Offices implements /alerts interface\r\n * */\r\nexport class Offices extends Endpoint {\r\n    officeId: any;\r\n    constructor(officeId) {\r\n        super('/offices');\r\n        this.officeId = officeId;\r\n    }\r\n\r\n    async get() {\r\n        const data = await super.get([this.officeId]);\r\n        return new Office(data);\r\n    }\r\n\r\n    async getHeadlines() {\r\n        const data = await super.get([this.officeId, 'headlines']);\r\n        return data;\r\n    }\r\n}\r\n\r\n/* @factory NOAA.offices(): Object\r\n *\r\n */\r\nexport function toOffices(officeId) {\r\n    return new Offices(officeId);\r\n}","import { Points, toPoints } from './endpoints';\r\nimport { Glossary, toGlossary } from './endpoints';\r\nimport { Icons, toIcons } from './endpoints';\r\nimport { Products, toProducts } from './endpoints';\r\nimport { Alerts, toAlerts } from './endpoints';\r\nimport { Offices, toOffices } from './endpoints';\r\nimport { Stations, toStations } from './endpoints';\r\nimport { Zones, toZones } from './endpoints';\r\nimport { GridPoint, Point } from './response';\r\n\r\nexport const Weather = {\r\n    Points: Points,\r\n    points: toPoints,\r\n    \r\n    Glossary: Glossary,\r\n    glossary: toGlossary,\r\n    \r\n    Icons: Icons,\r\n    icons: toIcons,\r\n    \r\n    Products: Products,\r\n    products: toProducts,\r\n    \r\n    Alerts: Alerts,\r\n    alerts: toAlerts,\r\n    \r\n    Offices: Offices,\r\n    offices: toOffices,\r\n    \r\n    Stations: Stations,\r\n    stations: toStations,\r\n    \r\n    Zones: Zones,\r\n    zones: toZones,\r\n    \r\n    Point: Point,\r\n    GridPoint: GridPoint,\r\n    \r\n};","// https://tidesandcurrents.noaa.gov/api/\r\n\r\n//The datum can be specified with the \"datum=\" option parameter. Note! Datum is mandatory for all water level products. \r\nexport enum Datum {\r\n    'CRD' =  'CRD', //Columbia River Datum\r\n    'IGLD' =  'IGLD', //International Great Lakes Datum\r\n    'LWD' =  'LWD', //Great Lakes Low Water Datum(Chart Datum)\r\n    'MHHW' =  'MHHW', //Mean Higher High Water\r\n    'MHW' =  'MHW', //Mean High Water\r\n    'MTL' =  'MTL', //Mean Tide Level\r\n    'MSL' =  'MSL', //Mean Sea Level\r\n    'MLW' =  'MLW', //Mean Low Water\r\n    'MLLW' =  'MLLW', //Mean Lower Low Water\r\n    'NAVD' =  'NAVD', //North American Vertical Datum\r\n    'STND' =  'STND' //Station Datum\r\n};\r\n\r\n// Specify the type of data with the \"product=\" option parameter. \r\nexport enum DataProduct {\r\n    'water_level' =  'water_level', //Preliminary or verified water levels, depending on availability.\r\n    'air_temperature' =  'air_temperature', //Air temperature as measured at the station.\r\n    'water_temperature' =  'water_temperature', //Water temperature as measured at the station.\r\n    'wind' =  'wind', //Wind speed, direction, and gusts as measured at the station.\r\n    'air_pressure' =  'air_pressure', //Barometric pressure as measured at the station.\r\n    'air_gap' =  'air_gap', //Air Gap(distance between a bridge and the water's surface) at the station.\r\n    'conductivity' =  'conductivity', //The water's conductivity as measured at the station.\r\n    'visibility' =  'visibility', //Visibility from the station's visibility sensor. A measure of atmospheric clarity.\r\n    'humidity' =  'humidity', //Relative humidity as measured at the station.\r\n    'salinity' =  'salinity', //Salinity and specific gravity data for the station.\r\n    'hourly_height' =  'hourly_height', //Verified hourly height water level data for the station.\r\n    'high_low' =  'high_low', //Verified high/ low water level data for the station.\r\n    'daily_mean' =  'daily_mean', //Verified daily mean water level data for the station.\r\n    'monthly_mean' =  'monthly_mean', //Verified monthly mean water level data for the station.\r\n    'one_minute_water_level' =  'one_minute_water_level', //One minute water level data for the station.\r\n    'predictions' =  'predictions', //6 minute predictions water level data for the station.\r\n    'datums' =  'datums', //datums data for the stations.\r\n    'currents' =  'currents' //Currents data for currents stations.\r\n};\r\n\r\n// Example =  units=english\r\nexport enum Units {\r\n    'metric' =  'metric', //Metric(Celsius, meters, cm/ s) units\r\n    'english' =  'english', //English(fahrenheit, feet, knots) units\r\n};\r\n\r\n// gmt, lst or lst_ldt.The time_zone can be specified with the \"time_zone=\" option parameter.\r\n// Example =  time_zone = gmt\r\n// Retrieve data with GMT date / times.\r\nexport enum TimeZone {\r\n    'gmt' =  'gmt', //Greenwich Mean Time\r\n    'lst' =  'lst', //Local Standard Time.The time local to the requested station.\r\n    'lst_ldt' =  'lst_ldt' //Local Standard / Local Daylight Time.The time local to the requested station.\r\n};\r\n\r\n//The interval for which Meteorological data is returned\r\n//Note! The default is 6 minute interval and there is no need to specify it.The hourly interval is supported for Met data and Predictions data only.\r\n//    Example =  interval = h-- - Will retrieve hourly Met data \r\nexport enum Interval {\r\n    'h' =  'h', //Hourly Met data and predictions data will be returned\r\n    'hilo' =  'hilo', //High/ Low tide predictions for subordinate stations.\r\n};\r\n\r\n//Format\r\n//The output format can be specified with the \"format=\" option parameter.\r\nexport enum Format {\r\n    'json' =  'json', //Javascript Object Notation.This format is useful for direct import to a javascript plotting library.Parsers are available for other languages such as Java and Perl.\r\n    'xml' =  'xml', //Extensible Markup Language.This format is an industry standard for data.\r\n    'csv' =  'csv' //Comma Separated Values.This format is suitable for export to Microsoft Excel or other spreadsheet programs.This is also the most easily human - readable format.\r\n};\r\n\r\n","import { toTime } from \"../utils/time\";\r\nimport { toValueUnits } from \"../utils/value-units\";\r\n\r\n// returns date formatted as YYYYMMDD HH:mm in UTC\r\nexport function formatDate(date) {\r\n\r\n    const year = date.getUTCFullYear();\r\n    const month = date.getUTCMonth() + 1;\r\n    const day = date.getUTCDate();\r\n\r\n    const hours = date.getUTCHours();\r\n    const minutes = date.getUTCMinutes();\r\n\r\n    return `${year}${month.toString().padStart(2, \"0\")}${day.toString().padStart(2, \"0\")} ${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\r\n}\r\n\r\nexport function createQueryString(params) {\r\n    \r\n    if (params) {\r\n        return Object.keys(params).map(key => key + '=' + encodeURIComponent(params[key])).join('&');\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nexport function appendQueryString(uri: string, params) {\r\n\r\n    const query = createQueryString(params);\r\n\r\n    if (query) {\r\n        return `${uri}?${query}`;\r\n    }\r\n\r\n    return uri;\r\n}\r\n\r\nexport function parseTime(s) {\r\n    //2019-06-20 03:30\r\n    //2019-06-22T23:58:22+00:00\r\n    return toTime(s.replace(' ', 'T') + ':00+00:00');\r\n}\r\n\r\nexport function parseFloatValue(value: string, units: string) {\r\n    return toValueUnits(parseFloat(value), units);\r\n}","import { Format, Datum, DataProduct, Units, Interval, TimeZone } from './const';\r\nimport { appendQueryString, formatDate } from '../utils'\r\n\r\nexport class TidesAndCurrentsDataApi {\r\n\r\n    private params: any;\r\n\r\n    /** The API end point */\r\n    static url = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter';\r\n\r\n    constructor(stationId, product, datum: any = undefined, interval: any = undefined, units = 'metric') {\r\n\r\n        if (!(product in DataProduct)) {\r\n            throw new Error('Invalid data product');\r\n        }\r\n\r\n        if (!(units in Units)) {\r\n            throw new Error('Invalid units');\r\n        }\r\n\r\n        this.params = {};\r\n        this.params['station'] = stationId;\r\n        this.params['product'] = product;\r\n        this.params['format'] = Format.json;\r\n        this.params['units'] = units;\r\n        this.params['time_zone'] = TimeZone.gmt;\r\n\r\n        if (datum) {\r\n            if (!(datum in Datum)) {\r\n                throw new Error('Invalid datum value');\r\n            }\r\n            this.params['datum'] = datum;\r\n        }\r\n        if (interval) {\r\n            if (!(interval in Interval)) {\r\n                throw new Error('Invalid interval');\r\n            }\r\n            this.params['interval'] = interval;\r\n        }\r\n    }\r\n\r\n    getLatest() {\r\n        this.params['date'] = 'latest';\r\n        return this.get();\r\n    }\r\n\r\n    getRecent() {\r\n        this.params['date'] = 'recent';\r\n        return this.get();\r\n    }\r\n\r\n    getToday() {\r\n        this.params['date'] = 'today';\r\n        return this.get();\r\n    }\r\n\r\n    getLastHours(hours) {\r\n        this.params['range'] = hours;\r\n        return this.get();\r\n    }\r\n\r\n    getHoursAfter(start, hours) {\r\n        this.params['begin_date'] = formatDate(start);\r\n        this.params['range'] = hours;\r\n        return this.get();\r\n    }\r\n\r\n    getHoursBefore(end, hours) {\r\n        this.params['end_date'] = formatDate(end);\r\n        this.params['range'] = hours;\r\n        return this.get();\r\n    }\r\n\r\n    getDateRange(start, end) {\r\n        this.params['begin_date'] = formatDate(start);\r\n        this.params['end_date'] = formatDate(end);\r\n        return this.get();\r\n    }\r\n\r\n    get() {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            let url = appendQueryString(TidesAndCurrentsDataApi.url, this.params);\r\n\r\n            xhr.open('GET', url);\r\n\r\n            xhr.onload = () => {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    let json = JSON.parse(xhr.response);\r\n                    if (json['error']) {\r\n                        reject(json['error']);\r\n                    }\r\n                    else {\r\n                        let data = self.parseResponse(json);\r\n                        data['parameters'] = Object.assign({}, self.params);\r\n                        resolve(data);\r\n                    }\r\n                } else {\r\n                    reject(xhr);\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                reject(xhr);\r\n            };\r\n\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    parseResponse(data) {\r\n        return data;\r\n    }\r\n}","import { parseFloatValue } from '../../utils';\r\nimport { TidesAndCurrentsDataApi } from '../api';\r\nimport { DataProduct, Units } from '../const';\r\n\r\nexport class Datums extends TidesAndCurrentsDataApi {\r\n    constructor(stationId) {\r\n        super(stationId, DataProduct.datums, undefined, undefined, Units.metric);\r\n    }\r\n\r\n    parseResponse(data) {\r\n        let datums: any[] = [],\r\n            self = this;\r\n        data['datums'].forEach(function (d) {\r\n            datums.push({\r\n                'name': d['n'],\r\n                'value': parseFloatValue(d['v'], 'm')\r\n            });\r\n        });\r\n        return datums;\r\n    }\r\n}","import { parseFloatValue, parseTime } from '../../utils';\r\nimport { TidesAndCurrentsDataApi } from '../api';\r\nimport { DataProduct, Datum, Interval, Units } from '../const';\r\n\r\nexport class Predictions extends TidesAndCurrentsDataApi {\r\n    constructor(stationId, datum?) {\r\n        if (!datum) {\r\n            datum = Datum.STND;\r\n        }\r\n        super(stationId, DataProduct.predictions, datum, Interval.hilo, Units.metric);\r\n    }\r\n\r\n    parseResponse(data) {\r\n        let predictions: any[] = [];\r\n        data['predictions'].forEach(function (d) {\r\n            predictions.push({\r\n                'time': parseTime(d['t']),\r\n                'value': parseFloatValue(d['v'], 'm'),\r\n                'type': d['type']\r\n            });\r\n        });\r\n        return predictions;\r\n    }\r\n}","import { TidesAndCurrentsDataApi } from '../api';\r\nimport { DataProduct, Units } from '../const';\r\n\r\nexport class Wind extends TidesAndCurrentsDataApi {\r\n    constructor(stationId, interval?) {\r\n        super(stationId, DataProduct.wind, undefined, interval, Units.metric);\r\n    }\r\n\r\n    parseResponse(data) {\r\n        return data;\r\n    }\r\n}","import { appendQueryString } from \"../utils\";\r\nimport { StationType } from \"./station-type\";\r\n\r\nexport class TidesAndCurrentsMetadataApi {\r\n\r\n    static baseUrl: string = 'https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    async stations(type?: StationType) : Promise<TidesAndCurrentsStation[]> {\r\n\r\n        let relativeUrl: string = 'stations.json';\r\n\r\n        if (type) {\r\n            relativeUrl = appendQueryString(relativeUrl, { type: type });\r\n        }\r\n\r\n        const response = await this.get(relativeUrl);\r\n        return (response as TidesAndCurrentsStationsResponse).stations;\r\n    }\r\n\r\n    async station(id: TidesAndCurrentsStationId) : Promise<TidesAndCurrentsStation> {\r\n\r\n        let relativeUrl: string = `stations/${id}.json`;\r\n\r\n        const response = await this.get(relativeUrl);\r\n        const stations = (response as TidesAndCurrentsStationsResponse).stations;\r\n\r\n        if (stations && stations.length === 1) {\r\n            return stations[0];\r\n        }\r\n\r\n        throw new Error(`API did not return any data for station id ${id}`);\r\n    }    \r\n\r\n    private async get(relativeUrl: string) : Promise<unknown> {\r\n        const url = `${TidesAndCurrentsMetadataApi.baseUrl}/${relativeUrl}`;\r\n        const response = await fetch(url);\r\n\r\n        if (response.ok === false) {\r\n\r\n            let errorMessage: string | null = null;\r\n\r\n            try {\r\n                const errorData = await response.json();\r\n                if ('errorMsg' in errorData) {\r\n                    errorMessage = errorData.errorMsg;\r\n                }\r\n            }\r\n            catch {\r\n                // ignore failure\r\n            }\r\n\r\n            throw new Error(errorMessage ?? `API responded with status ${response.status} (${response.statusText})`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n}\r\n","export enum StationType {\r\n    waterlevels =  'waterlevels', // Stations that actively measure water levels\r\n    historicwl =  'historicwl', // Stations that have measured water levels in the past. This includes active stations.\r\n    met =  'met', // Stations that have one or more meteorological sensors installed, such as air temperature.\r\n    waterlevelsandmet =  'waterlevelsandmet', // Combined results of waterlevels and met types. Results in a list of active stations, excluding current meters.\r\n    tidepredictions =  'tidepredictions', // Stations that offer tide predictions based on harmonic analysis.\r\n    harcon =  'harcon', // Water level stations with measured harmonic constituents.\r\n    datums =  'datums', // Water level stations with datums.\r\n    supersededdatums =  'supersededdatums', // Water level stations with superseded datums.\r\n    benchmarks =  'benchmarks', // Water level stations with published benchmarks.\r\n    supersededbenchmarks =  'supersededbenchmarks', // Water level stations with superseded benchmarks.\r\n    currents =  'currents', // Real-time current meter stations that are presently deployed and are actively measuring currents.\r\n    historiccurrents =  'historiccurrents', // Current meter stations that are no longer deployed, such as historic real-time stations that have been uninstalled or short-term survey stations.\r\n    surveycurrents =  'surveycurrents', // Short-term current meter stations that collected data for a limited time in order improve tidal current predictions or support operational forecast models.\r\n    currentpredictions =  'currentpredictions', // Current meter stations for which tidal current predictions are available.\r\n    cond =  'cond', // Stations that have conductivity sensors installed.\r\n    watertemp =  'watertemp', // Stations that have water temperature sensors installed.\r\n    physocean =  'physocean', // Stations that have a physical oceanography(water temperature/conductivity) sensor installed.\r\n    tcoon =  'tcoon', // Stations that are affiliated with the Texas Coastal Ocean Observation Network (TCOON).\r\n    oneminute =  '1minute', // Stations that have 1 minute water level data.\r\n    airgap =  'airgap', // Stations that have air gap data.\r\n    visibility =  'visibility', // Stations that have visibility sensors installed.\r\n    highwater =  'highwater', // Stations that are in High Water Alert.\r\n    lowwater =  'lowwater' // Stations that are in Low Water Alert.\r\n}","import { Format, Datum, DataProduct, Units, Interval } from './data/const';\r\n\r\nimport { Datums } from './data/products/datums';\r\nimport { Predictions } from './data/products/predictions';\r\nimport { Wind } from './data/products/wind';\r\nimport { TidesAndCurrentsMetadataApi } from './metadata/api';\r\nimport { StationType } from './metadata/station-type';\r\n\r\nexport const TidesAndCurrents = {\r\n    Format: Format,\r\n    Datum: Datum,\r\n    DataProduct: DataProduct,\r\n    Units: Units,\r\n    Interval: Interval,\r\n    StationType: StationType,\r\n\r\n    data: {\r\n        predictions: function (stationId, datum?) {\r\n            return new Predictions(stationId, datum);\r\n        },\r\n        datums: function (stationId) {\r\n            return new Datums(stationId);\r\n        },\r\n        wind: function (stationId, interval?) {\r\n            return new Wind(stationId, interval);\r\n        }\r\n    },\r\n\r\n    metadata: new TidesAndCurrentsMetadataApi()\r\n};\r\n\r\n"],"names":["formatDate"],"mappings":"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ACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE;;AAGG,QAAA,eAAe,GAAG;IAC3B,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,IAAI;IACV,IAAA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","x_google_ignoreList":[3]}